When would you want to use a remote repository rather than keeping all your
work local?

	There are a couple of cases where remote repositories are especially
	useful besides just having another backup of your repository hosted in the
	cloud in case your computer crashes or gets droped in the toilet. The
	first reason to use a remote repository is if you are collaborating with
	others, since they will be able to work on separate branches of the
	project and push them to the remote location for merging and feedback. The
	other main reason to use a remote repository is for colaborating with
	yourself. This is especially useful if you are using multiple machines to
	work on a project and you want to keep track of your work in one central
	place.
  
Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

  	If you have one or many collaborators making changes on the remote
  	repository you might want to wait and evaluate if you want to
  	incorporate those changes into your local version of the code. Also you
  	may want to make sure that there are not obvious problems with the new
  	code.

Describe the differences between forks, clones, and branches. When would you
use one instead of another?

	Branches are new segments off of a repository that are either on the remote server or on the local machine, but not both. In order for new branches to reflect on the local machine or on the remote they would need to be pushed or pulled. Forks are specific to the remote server and are a way to create a clone directly on GitHubs servers of an existing git repository for use in collaboration. This allows the person who originally created the repository to remain connected and credited for to its progress as others work on it. A clone can be a copy of a repository made on the local machine or a copy of a repository on GitHub.
